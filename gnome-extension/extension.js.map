{"version":3,"file":"extension.js","mappings":";;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB,IAAI,kBAAkB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;SC9BA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;;;;;ACtBA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4BAA4B,EAAE,mBAAO,CAAC,iCAAY;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB,8BAA8B;;AAE/C;AACA;AACA;AACA,iDAAiD,2BAA2B;AAC5E,sDAAsD,8BAA8B;;AAEpF;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS,IAAI,uCAAuC;AACrF,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,sDAAsD,oCAAoC;AAC1F,+BAA+B,qBAAqB,IAAI,mDAAmD;;AAE3G;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,C","sources":["webpack:///./utilTime.js","webpack:///webpack/bootstrap","webpack:///./index.js"],"sourcesContent":["\nfunction timeConvert(n) {\n  var num = n;\n  var hours = (num / 60);\n  var rhours = Math.floor(hours);\n  var minutes = (hours - rhours) * 60;\n  var rminutes = Math.round(minutes);\n  return {\n    hours: rhours, minutes: rminutes\n  }\n}\nfunction timeConvertLabel(minutes) {\n  const converted = timeConvert(minutes)\n  return `${converted.hours}h ${converted.minutes}`\n}\n\nconst weekDays = [\n  'Dimanche',\n  'Lundi',\n  'Mardi',\n  'Mercredi',\n  'Jeudi',\n  'Vendredi',\n  'Samedi',\n]\n\nmodule.exports = {\n  timeConvert,\n  timeConvertLabel,\n  weekDays,\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const GETTEXT_DOMAIN = 'my-indicator-extension';\nconst { GObject, St } = imports.gi;\nconst ExtensionUtils = imports.misc.extensionUtils;\nconst Main = imports.ui.main;\nconst PanelMenu = imports.ui.panelMenu;\nconst PopupMenu = imports.ui.popupMenu;\nconst _ = ExtensionUtils.gettext;\nconst Soup = imports.gi.Soup;\nconst Util = imports.misc.util\nconst {timeConvertLabel, weekDays} = require('./utilTime')\n\nconst Indicator = GObject.registerClass(\n  class Indicator extends PanelMenu.Button {\n\n    _init() {\n      super._init(0.0, _('Beaux Dés'));\n      this.add_child(new St.Icon({\n        icon_name: 'face-smile-symbolic',\n        style_class: 'system-status-icon',\n      }));\n    }\n    enable() {\n      this.launchServer()\n      this.createTimeToggler()\n      this.menu.connect('open-state-changed', (menu, open) => {\n        if (open) {\n          this.createTimeChecker()\n        } else {\n          this.menu.removeAll()\n          this.createTimeToggler()\n        }\n      });\n    }\n    disable() {\n      this.toDestroy.forEach((widget) => {\n        if(widget.destroy)  widget.destroy()\n      })\n      this.toDestroy = []\n    }\n    async launchServer() {\n      Util.spawn(['/bin/node', \"server/bin/www\"])\n    }\n    async createTimeChecker() {\n      const section = new PopupMenu.PopupMenuSection();\n      this.menu.addMenuItem(section);\n      this.toDestroy.push(section)\n\n      const sectionWaiting = new PopupMenu.PopupSeparatorMenuItem('Chargement...');\n      this.toDestroy.push(sectionWaiting)\n      section.addMenuItem(sectionWaiting);\n      await makeRequest('GET', 'http://127.0.0.1:6578/api/times/remaining', {},{\n        email: 'corentin.labroche@lacooperativewelcoop.com',\n        password: 'wdEWYiGpGMVtb78WLvfQfaXPw9BzUiPEw5KE8kP9NJXy5',\n        token: 'corentin.labroche@lacooperativewelcoop.com',\n      })\n        .then((data) => {\n          const times =  data.value\n          const {workTime, balanceTime,byDays} = times\n\n          // Section Week\n          const sectionTitle = new PopupMenu.PopupSeparatorMenuItem('Semaine');\n          section.addMenuItem(sectionTitle);\n          section.addAction(`Temps travaillé : ${timeConvertLabel(workTime)}`);\n          section.addAction(`Balance              : ${timeConvertLabel(balanceTime)}`);\n\n          // Section Day\n          const sectionByDay = new PopupMenu.PopupSeparatorMenuItem('Par jour');\n          section.addMenuItem(sectionByDay);\n          Object.keys(byDays).forEach((day) => {\n            const weekDay = weekDays[new Date(day).getDay()]\n            section.addAction(`${weekDay} : ${timeConvertLabel(byDays[day].workTime)}`);\n          })\n\n          // Ce jour\n          const sectionDay = new PopupMenu.PopupSeparatorMenuItem('Aujourd\\'hui');\n          section.addMenuItem(sectionDay);\n          var start = new Date();\n          start.setUTCHours(0, 0, 0, 0);\n          const work = byDays[start.toISOString()]\n          section.addAction(`Temps travaillé : ${timeConvertLabel(work?.workTime)}`);\n          section.addAction(`Balance              : ${timeConvertLabel(work?.balanceTime)}`);\n          section.addAction(`${start.toISOString()} : ${byDays[start.toISOString()]?.workTime || 'Inconnu'}`);\n\n          sectionWaiting.destroy()\n        })\n        .catch(err => {\n          logInSystem(err)\n        })\n    }\n    createTimeToggler() {\n      let item = new PopupMenu.PopupMenuItem(_('Pointer/Dépointer'));\n      item.connect('activate', async () => {\n        await makeRequest('POST', 'http://127.0.0.1:6578/api/times/', {}, {\n          email: 'corentin.labroche@lacooperativewelcoop.com',\n          password: 'wdEWYiGpGMVtb78WLvfQfaXPw9BzUiPEw5KE8kP9NJXy5',\n          token: 'corentin.labroche@lacooperativewelcoop.com',\n        })\n          .then(data => {\n            Main.notify(_(data.text));\n          })\n          .catch(err => {\n            logInSystem(err)\n          })\n      });\n      this.menu.addMenuItem(item);\n    }\n  });\n\nclass Extension {\n  constructor(uuid) {\n    this._uuid = uuid;\n\n    ExtensionUtils.initTranslations(GETTEXT_DOMAIN);\n  }\n\n  enable() {\n    this._indicator = new Indicator();\n    Main.panel.addToStatusArea(this._uuid, this._indicator);\n  }\n\n  disable() {\n    this._indicator.destroy();\n    this._indicator = null;\n  }\n}\n\nfunction init(meta) {\n  return new Extension(meta.uuid);\n}\n\n\nfunction makeRequest(method, url = '/',params = {}, headers = {}) {\n  return new Promise((res, rej) => {\n    let _httpSession = new Soup.Session();\n    let message = Soup.Message.new(method, url);\n    Object.keys(headers).forEach(key => {\n      message.request_headers.append(key, headers[key]);\n    })\n    _httpSession.queue_message(message, function (_httpSession, message) {\n      if (message.status_code !== 200) {\n        logInSystem(message)\n        return rej(message)\n      };\n      let json = JSON.parse(message.response_body.data);\n      res(json)\n      // do something with the data\n    });\n  })\n}\n\nfunction logInSystem(text) {\n  log(text)\n}"],"names":[],"sourceRoot":""}